My psudeocode for my bag of marbles would perform functions based on these business rules:
there are only 256 marbles in the world
any marble without a bag number lives on the factory floor
any bag must have a non-negative number of marbles - zero is within the acceptable range
any bag cannot exceed a maximum number of marbles, set by busness needs
the last marble into a bag is the first marble out
// there must be a mix of colors of marbles in the bag

marbles have:
an index number, indicating which of the 256 marbles they are
a bag number, indicating which bag they are assigned to
a color, labeled in RGB hex, indicating which shade properties they have
i.e. marble(17, 0) is not in any bag
	marble(1, 3) is the second marble in the world, and is currently sitting in bag 3
// a mix of colors in the bag is an average of their hex values
// marble(6, 0, '00FF00') is still on the factory floor, but it's green

functions include:
addMarble - uses next index number and adds next bag number
i.e. marble(17, 0) becomes marble(17, 3)
remMarble - uses last index number and removes bag number
i.e. marble(17, 3) becomes marble(17, 0)
invBag - reports bag contents
i.e. marble(3, 3), marble(6, 3), marble(11, 3), marble(17, 3)

tests include:
adding marbles cannot exceed maximum
removing marbles cannot go below zero
try to remove multiple marbles without causing index conflicts
// see if color mix averages to white, black, or grey
// add all the hex values and divide by count of marbles to determine if it's a mixed bag
